@import url("https://fonts.googleapis.com/css2?family=Cinzel:wght@400;900&display=swap");

@-webkit-keyframes move-to-left {
  0% {
    opacity: 0;
    transform: translateX(3.125rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes move-to-left {
  0% {
    opacity: 0;
    transform: translateX(3.125rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

:root {
  --clr-primary-900: #09475e;
  --heading-primary: clamp(2.57rem, calc(0.83rem + 4.63vw), 4.3rem);
  --heading-secondary: clamp(2.28rem, calc(0.98rem + 3.47vw), 3.58rem);
  --heading-5: clamp(1.27rem, calc(1.09rem + 0.47vw), 1.44rem);
  --space-medium: clamp(3rem, calc(2rem + 2.67vw), 4rem);
}

html {
  overflow-x: hidden;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: "Cinzel", serif;
}

body {
  min-height: 100vh;
  display: flex;
  overflow-x: hidden;
  background: linear-gradient(128.17deg, #0fb8a4 20.38%, #0097cf 101.45%);
}

button,
input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  background: none;
}

button {
  cursor: pointer;
}

.hidden {
  position: absolute;
  inset: 0;
  overflow-x: hidden;
  pointer-events: none;
}

.overlay-box {
  width: 200%;
  display: flex;
  position: absolute;
  top: 0;
  height: 100%;
  right: -200%;
  z-index: 1000;
}

.start-animation {
  -webkit-animation: move-in 2s ease-out none;
  animation: move-in 2s ease-out none;
}

.overlay {
  position: absolute;
  height: 100%;
  width: 25%;
  background-color: var(--clr);
  right: -20%;
}

.overlay:nth-child(2) {
  left: 50%;
}

.overlay:nth-child(3) {
  right: 0;
}

.overlay-100 {
  width: 50%;
  left: 0;
}

.overlay-start {
  -webkit-animation: move-in 3s calc(100ms * var(--i)) ease-in-out forwards;
  animation: move-in 3s calc(100ms * var(--i)) ease-in-out forwards;
}

.overlay-end {
  -webkit-animation: move-out 3s calc(100ms * var(--i)) ease-out forwards;
  animation: move-out 3s calc(100ms * var(--i)) ease-out forwards;
}

@-webkit-keyframes move-in {
  0% {
    transform: translateX(0);
  }

  30% {
    transform: translateX(-50%);
  }

  50% {
    transform: translateX(-50%);
  }

  100% {
    transform: translateX(-150%);
  }
}

@keyframes move-in {
  0% {
    transform: translateX(0);
  }

  30% {
    transform: translateX(-50%);
  }

  50% {
    transform: translateX(-50%);
  }

  100% {
    transform: translateX(-150%);
  }
}

@-webkit-keyframes move-out {
  0% {
    left: -20%;
  }

  50% {
    left: calc(20% * var(--i));
  }

  70% {
    left: calc(20% * var(--i));
  }

  100% {
    left: 100%;
  }
}

@keyframes move-out {
  0% {
    left: -20%;
  }

  50% {
    left: calc(20% * var(--i));
  }

  70% {
    left: calc(20% * var(--i));
  }

  100% {
    left: 100%;
  }
}

@-webkit-keyframes showBtn {
  from {
    transform: translate(-80%, -50%);
    opacity: 0;
  }

  to {
    transform: translate(-50%, -50%);
    opacity: 1;
  }
}

@keyframes showBtn {
  from {
    transform: translate(-80%, -50%);
    opacity: 0;
  }

  to {
    transform: translate(-50%, -50%);
    opacity: 1;
  }
}

.btn-wrapper {
  min-height: 31.25rem;
  height: 77vh;
  position: absolute;
  top: 0.625rem;
  left: 50%;
  transform: translateX(-50%);
}

@media only screen and (max-width: 50rem) {
  .btn-wrapper {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    gap: 1rem;
    min-height: 40.25rem;
  }
}

.btn {
  white-space: nowrap;
  margin-inline: auto;
  display: block;
  padding: 0.75rem 2rem;
  color: #09475e;
  font-weight: 900;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 0.75rem;
  box-shadow: 4px 4px 0px rgba(255, 255, 255, 0.5), 8px 8px 0px rgba(255, 255, 255, 0.4), 12px 12px 0px rgba(255, 255, 255, 0.3);
  transition: all 300ms ease;
  outline: none;
}

.btn:hover,
.btn:focus-visible {
  box-shadow: 0px 0px 0px rgba(255, 255, 255, 0.5), 0px 0px 0px rgba(255, 255, 255, 0.4), 0px 0px 0px rgba(255, 255, 255, 0.3);
}

.btn:active {
  transform: translateY(0.25em);
}

#btn--hold {
  margin-top: 3rem;
}

@media only screen and (max-width: 50rem) {
  #btn--hold {
    margin-top: 0;
  }
}

#btn--new {
  position: absolute;
  bottom: 0;
}

@media only screen and (max-width: 50rem) {
  #btn--new {
    bottom: -0.625rem;
  }
}

#btn--start {
  margin-top: 6rem;
}

.container {
  width: calc(100% - 1.5rem);
  max-width: 23.75rem;
  margin: auto;
  pointer-events: auto;
  opacity: 1;
  transform: translateX(0);
  transition: all 300ms ease-out;
}

.container.hide-right {
  transform: translateX(40px);
  opacity: 0;
  pointer-events: none;
}

.getNameBox {
  position: relative;
  border-radius: 1.75rem;
  padding: 2.125rem 2rem 0.75rem;
  background-color: rgba(255, 255, 255, 0.6);
}

.getNameBox::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  box-shadow: 5px 5px 0px rgba(255, 255, 255, 0.2), 10px 10px 0px rgba(255, 255, 255, 0.15), 15px 15px 0px rgba(255, 255, 255, 0.1);
  border-radius: inherit;
}

.input-box {
  height: 2rem;
  position: relative;
}

.input-box input {
  position: relative;
  z-index: 10;
  height: 100%;
  width: 100%;
  border: none;
  background-color: transparent;
  font-size: 1rem;
  padding: 0.375rem 0.5rem 2px;
  border-radius: 0.625rem;
  border-bottom: 3px solid #0097cf;
  outline: none;
}

.input-box label {
  position: absolute;
  bottom: 100%;
  left: 0;
  color: #09475e;
  font-size: 0.875rem;
  letter-spacing: 1px;
  font-weight: 900;
  transition: all 300ms ease-out;
}

.input-box input:not(:focus):-moz-placeholder-shown+label {
  transform: translateY(100%);
  font-size: 1rem;
}

.input-box input:not(:focus):-ms-input-placeholder+label {
  transform: translateY(100%);
  font-size: 1rem;
}

.input-box input:not(:focus):placeholder-shown+label {
  transform: translateY(100%);
  font-size: 1rem;
}

.input-box i {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 152, 207, 0.2);
  z-index: 1;
  pointer-events: none;
  border-radius: 0.625rem;
  transition: height 300ms ease-out;
}

.input-box input:not(:focus):-moz-placeholder-shown~i {
  height: 0;
}

.input-box input:not(:focus):-ms-input-placeholder~i {
  height: 0;
}

.input-box input:not(:focus):placeholder-shown~i {
  height: 0;
}

.main {
  width: 100%;
  display: flex;
  position: relative;
  display: none;
}

.wrapper {
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
  background: linear-gradient(313.79deg, rgba(15, 184, 164, 0.8) 1.29%, rgba(0, 151, 207, 0.8) 100.74%);
  border: 2px solid rgba(255, 255, 255, 0.4);
  box-shadow: 0px 10px 0px rgba(255, 255, 255, 0.3), 0px 20px 0px rgba(255, 255, 255, 0.2), 0px 30px 0px rgba(255, 255, 255, 0.1);
  border-radius: 11.5rem;
  margin-inline: auto;
  -webkit-margin-before: 2rem;
  margin-block-start: 2rem;
  -webkit-margin-after: 3rem;
  margin-block-end: 3rem;
  min-height: 38.375rem;
  width: calc(100% - 1.5rem);
  max-width: 70.5rem;
  display: flex;
  text-align: center;
  overflow: hidden;
}

@media only screen and (max-width: 50rem) {
  .wrapper {
    flex-direction: column;
    min-height: 47.5rem;
    gap: 6.25rem;
  }
}

.player {
  flex: 1;
  padding: var(--space-medium);
  padding-bottom: 0;
  color: rgba(255, 255, 255, 0.9);
  word-break: break-all;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  transition: background-color 150ms linear;
}

.player--active {
  background-color: rgba(255, 255, 255, 0.2);
}

.player__name {
  font-size: var(--heading-primary);
  font-weight: 900;
}

.player__score {
  color: var(--clr-primary-900);
  font-size: var(--heading-secondary);
  font-weight: 900;
}

.player__current {
  font-size: var(--heading-5);
  font-weight: 900;
  padding: 1rem;
  border-top-left-radius: 2.625rem;
  border-top-right-radius: 2.625rem;
  border-inline: 2px solid rgba(255, 255, 255, 0.4);
  border-top: 2px solid rgba(255, 255, 255, 0.4);
}

.player__current-label {
  margin-bottom: 0.5rem;
  color: rgba(255, 255, 255, 0.9);
}

.player__current-score {
  color: var(--clr-primary-900);
}

.dice {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  filter: drop-shadow(0 2rem 4rem rgba(0, 0, 0, 0.25));
}

@media only screen and (max-width: 50rem) {
  .dice {
    width: 5.5rem;
  }
}

.dice--hide {
  display: none;
}